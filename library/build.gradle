// Library: meter, Android Micro Benchmarking

buildscript {
    repositories {
        jcenter()
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        /* https://github.com/kt3k/coveralls-gradle-plugin */
        classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.0.1x'
    }
}

apply plugin: 'com.android.library'
apply plugin: 'jacoco'
apply plugin: 'com.github.kt3k.coveralls'

/* DEFINE REPOSITORY WITH LATEST ROBOLECTRIC VERSION */
repositories {
    mavenCentral()
    maven {
        url 'https://oss.sonatype.org/content/repositories/snapshots/'
    }
}

dependencies {
    /* =========================== */
    /*         DEBUG/RELEASE       */
    /* =========================== */
    compile fileTree(dir: 'libs', includes: ['*.jar'])

    /* =========================== */
    /*         UNIT TESTING        */
    /* =========================== */
    if (useTesting) {
        // unit tests libs. Rule: repeated Libs should be excluded.
        androidTestCompile fileTree(dir: 'src/tests/libs', include: '*.jar')

        /* UNIT TESTS HAS DEPENDENCY ON SUPPORT LIB, SO INCLUDE IT MANUALLY FOR CONTROLLING THE VERSION OF IT */
        androidTestCompile "com.android.support:support-v4:${androidSupportLib}"

        /* Hamcrest (v1.4) */
        androidTestCompile 'org.hamcrest:hamcrest-integration:+',
                'org.hamcrest:hamcrest-core:+',
                'org.hamcrest:hamcrest-library:+'

        /* Mockito (v1.10.8) */
        androidTestCompile 'org.mockito:mockito-core:+'
        androidTestCompile 'com.google.dexmaker:dexmaker-mockito:+'

        /* jUnit (v4.12 beta 2) */
        androidTestCompile('junit:junit:+') { exclude module: 'hamcrest-core' }
    }
}

android {
    compileSdkVersion androidCompileSdkVersion
    buildToolsVersion androidBuildToolsVersion

    // Android Manifest generation options
    defaultConfig {
        minSdkVersion androidMinSdkVersion
        targetSdkVersion androidTargetSdkVersion

        versionCode 1
        versionName "1.0"

        /* default unit testing runner */
        testInstrumentationRunner "android.test.InstrumentationTestRunner"
    }

    /* be specific about JaCoCo version. */
    jacoco {
        version JaCoCoVersion
    }

    buildTypes {
        debug {
            testCoverageEnabled true
        }
        release {
            runProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        androidTest.setRoot('src/tests')
        androidTest {
            // default path is '~/java'
            java.srcDirs = ['src/tests/java']
        }
    }
}

/* Enable JaCoCo integration */
jacoco {
    toolVersion = JaCoCoVersion
}

coveralls.jacocoReportPath = 'build/outputs/reports/coverage/debug/report.xml'

// set output binary version. format: {versionName}.{versionCode}.{gitRevision}
version = android.defaultConfig.versionName + "." + android.defaultConfig.versionCode + ".${GIT_REVISION}"
